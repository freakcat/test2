// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using HouYou;
//
//    var sufferBd = SufferBd.FromJson(jsonString);

namespace HouYou
{
    using System;
    using System.Collections.Generic;
    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class SufferBd
    {
        
        [JsonProperty("user")] public List<User> Users{ get; set; }
        [JsonProperty("sufferble")] public Sufferble Sufferble { get; set; }

        [JsonProperty("trainble")] public Trainble Trainble { get; set; }

        [JsonProperty("estimable")] public Estimable Estimateble { get; set; }
    }

    public partial class SufferBd
    {
        public static SufferBd FromJson(string json) =>
            JsonConvert.DeserializeObject<SufferBd>(json, HouYou.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this SufferBd self) => JsonConvert.SerializeObject(self, HouYou.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter {DateTimeStyles = DateTimeStyles.AssumeUniversal}
            },
        };
    }
}